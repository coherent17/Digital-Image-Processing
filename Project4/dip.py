# -*- coding: utf-8 -*-
"""dip.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zeCHYPfslTYtCb6j1W3rkUx0JSbnOenU
"""

import cv2 as cv
import matplotlib.pyplot as plt
from PIL import Image
import numpy as np
from google.colab.patches import cv2_imshow

def save_picture(filename, source):
  image = Image.fromarray(np.uint8(source))
  image.save(filename, dpi=(200, 200))

img = cv.imread('LovePeace rose.tif')
cv2_imshow(img)

B,G,R = cv.split(img)
save_picture('R.png', R)
save_picture('G.png', G)
save_picture('B.png', B)

HSI = cv.cvtColor(img, cv.COLOR_BGR2HSV)
cv2_imshow(HSI)

H,S,I = cv.split(HSI)
save_picture('H.png', H)
save_picture('S.png', S)
save_picture('I.png', I)

#RGB sharpening

kernel = np.array([[-1, -1, -1],
           [-1,  9, -1],
           [-1, -1, -1]], dtype = np.double)

R_filtered = cv.filter2D(R, ddepth = -1, kernel=kernel, borderType=cv.BORDER_DEFAULT)
G_filtered = cv.filter2D(G, ddepth = -1, kernel=kernel, borderType=cv.BORDER_DEFAULT)
B_filtered = cv.filter2D(B, ddepth = -1, kernel=kernel, borderType=cv.BORDER_DEFAULT)

BGR_sharpen = cv.merge([B_filtered, G_filtered, R_filtered])
cv2_imshow(BGR_sharpen)
save_picture('RGB_sharpened.png', cv.cvtColor(BGR_sharpen, cv.COLOR_BGR2RGB))

#HSI sharpening
I_filtered = cv.filter2D(I, ddepth = -1, kernel=kernel, borderType=cv.BORDER_DEFAULT)

HSI_sharpen = cv.merge([H, S, I_filtered])
cv2_imshow(HSI_sharpen)
HSI_sharpen2BGR = cv.cvtColor(HSI_sharpen, cv.COLOR_HSV2BGR)
cv2_imshow(HSI_sharpen2BGR)
save_picture('HSI_sharpened.png', cv.cvtColor(HSI_sharpen2BGR, cv.COLOR_BGR2RGB))

#difference the image
diff_img = np.zeros((img.shape[0], img.shape[1]))


for i in range(img.shape[0]):
    for j in range(img.shape[1]):
        deltaB = int(BGR_sharpen[i][j][0]) - int(HSI_sharpen2BGR[i][j][0])
        deltaG = int(BGR_sharpen[i][j][1]) - int(HSI_sharpen2BGR[i][j][1])
        deltaR = int(BGR_sharpen[i][j][2]) - int(HSI_sharpen2BGR[i][j][2])
        diff_img[i][j] = (deltaB + deltaG + deltaR) / 3 + 128

print(diff_img)
cv2_imshow((diff_img))

